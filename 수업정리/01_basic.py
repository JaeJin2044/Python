#01_basic.py

1+1 #파이썬이 1+1 연산만 하고 결과가 출력되지 않는다.
#내눈으로 볼수 있게 출력해달라 !!!.. 명령어가 필요하다 ..

print(1+1) #연산의 결과가 출력된다.
#대화형 IDLE창에서는 1+1만써도 결과가 보인다 (대화형식이기때문)
#오류중 창이 뜨는 오류는 문법이 잘못됐다 .. 라는걸 표시하는것임
#이런건 존재하지 않는다.

'''
#주석(comment)
1. 소스에 설명을 추가한는것
2. 프로그램 수행에 영향이 없다.
3. 한줄 주석: #뒤부터 주석처리
4. 여러 줄 주석: ''' '''또는 """ """ 으로 처리
     ->작은 따옴표 3개또는 큰 따옴표 3개로 묶는다.
#print()함수
 1. 화면으로 데이터를 출력하는 함수 (기능)
    >함수 : 특정행위를 하기 위해 미리 만들어 놓은 기능
    >화면 : IDLE이나 콘솔(cmd.exe)
 2. 대화형 인터프리터에서는 사용하지 않아도 된다.
#문자열(String)
 -문자의 나열
 -문자열을 만드려면 "abc" 또는 'abc'처럼 따옴표로 묶는다.
 
'''
#print(안녕하세요)   #창이 뜨진 않고 대화형 인터프리터창에서 나오는
                    #오류는 논리적인 오류라 칭한다.
                    #line은 줄 오른쪽 하단에 표시.
#오류코드는 주석처리 ... 오류가 발생되면 밑에 있는 코드는 다 무시됨..

print("안녕하세요")

# print()함수의 사용법
# 여러 개의 값을 출력 : 콤마(,)로 값을 나열
print(1,2,3)      # 숫자는 그냥 쓴다 ... but 문자는 반드시 묶어야 한다 ..
print("A","B","C")
print(1,2,"A","B")  #같이 섞어서 사용 가능

# 세미콜론(;)으로 여러 줄의 코드를 합칠 수 있다.
# > 한 줄에는 하나의 "명령" 을 사용

print("A","B");print("C","D")

'''
   print() 함수에서 '구분기호'와 '마지막기호'
       -콤마(,)로 값을 나열 할 때 , 값을 구분 하는 '구분기호'
       >기본 값 공백 (sep='')

       -print()함수의 출력이 끝나면 출력하는 '마지막 기호'
       > 기본 값 개행 (줄바꿈) (end='\n')
       \n은 줄바꿈을 의미하는 특수한 문자 (이스케이프 문자)
       n= new line(새로운 줄 )

'''
print(1,2,3) #sep=' ' 이 기본으로 적용 아무것도 안적었지만 한칸씩 띄어짐
print(1,2,3, sep=' ') #가장 마지막에 sep=' '를 표시
print(1,2,3, sep='') #빈문자열을 넣었으니 붙어서 나옴 ..123이 아니라 각각의 숫자임
print(1,2,3, sep="재진")  #이런식으로 응용 가능 ...
print(1,2,3, sep= "5")
#얼마든지 원하는 값을 구분기호로 지정 가능 ...

print("안녕") #이렇게 적으면  end="\n"이 기본으로 적용 된것임...
print("하세요", end="\n")   #이거 두개 전부 다같다 ... 생략 된것이기 때문..
print("반갑습니다." , end="하하") #end 는 출력하는거임 ...
print("잘가요~~")
print("dsafsdfsadf" ,end= "밑에 문장 연결된다.")
print("이것도 아마 붙을듯")
print("이건 따로 나온다.", end= "이건 역슬러쉬 넣어서 다음꺼 나옴. \n")
print("이건 독립적으로 나온다.")


print("제 이름은 홍길동입니다. \n제 나이는 \n20 살입니다. " ,end="잘부탁드립니다.\n")
#end 는 마지막에 출력해주는 기능이지... end안에 \n이 있다면 개행을 해준다.
#그냥 마지막에 말 붙여 주는거라 생각 그리고 출력후 \n써서 개행 해주자 !!! 보기 깔끔

print(1,2,3, sep="과 ",end="입니다\n")
print(1,"과 ",2,"와 ",3,"입니다" , sep="")

print(200,"원 입니다." ,sep="")
print(200,"원",sep="", end=" 입니다.\n")  #개행문자는 항상 문자이기 때문에 따옴표로 묶어준다.
print()  #이렇게 사용하면 end="\n" 만 적용되어 1줄 개행만 한다.
print(end="\n")

#print()




























